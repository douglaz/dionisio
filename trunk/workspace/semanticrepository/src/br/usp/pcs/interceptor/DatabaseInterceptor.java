package br.usp.pcs.interceptor;import javax.persistence.EntityManager;import javax.persistence.EntityTransaction;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import br.com.caelum.vraptor.InterceptionException;import br.com.caelum.vraptor.Intercepts;import br.com.caelum.vraptor.core.InterceptorStack;import br.com.caelum.vraptor.ioc.RequestScoped;import br.com.caelum.vraptor.resource.ResourceMethod;import br.usp.pcs.dao.Database;@RequestScoped@Interceptspublic class DatabaseInterceptor implements br.com.caelum.vraptor.Interceptor {    private final Logger logger = LoggerFactory.getLogger(DatabaseInterceptor.class);    private final Database controller;    public DatabaseInterceptor(Database controller) {        this.controller = controller;    }    public void intercept(InterceptorStack stack, ResourceMethod method, Object instance) throws InterceptionException {        EntityManager entityManager = controller.getEntityManager();        EntityTransaction tx = entityManager.getTransaction();        try {            tx.begin();            logger.debug("Opening new transaction." + tx);            stack.next(method, instance);            tx.commit();            logger.debug("Commiting transaction." + tx);        } finally {            try {                if (tx.isActive()) {                    tx.rollback();                    logger.debug("Rolling back transaction." + tx);                }            } finally {                entityManager.close();                logger.debug("Closing entityManger ..." + entityManager);            }        }    }    public boolean accepts(ResourceMethod method) {        return true;    }}