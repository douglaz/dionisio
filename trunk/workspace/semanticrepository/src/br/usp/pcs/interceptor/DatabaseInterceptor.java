package br.usp.pcs.interceptor;import javax.persistence.EntityManager;import javax.persistence.EntityTransaction;import javax.servlet.http.HttpServletRequest;import br.com.caelum.vraptor.InterceptionException;import br.com.caelum.vraptor.Intercepts;import br.com.caelum.vraptor.Result;import br.com.caelum.vraptor.core.InterceptorStack;import br.com.caelum.vraptor.ioc.RequestScoped;import br.com.caelum.vraptor.resource.ResourceMethod;import br.usp.pcs.dao.Database;@RequestScoped@Interceptspublic class DatabaseInterceptor implements br.com.caelum.vraptor.Interceptor {    private final Result result;    private final HttpServletRequest request;    private final Database controller;    public DatabaseInterceptor(Database controller, Result result, HttpServletRequest request) {        this.controller = controller;        this.result = result;        this.request = request;    }    public void intercept(InterceptorStack stack, ResourceMethod method, Object instance) throws InterceptionException {        result.include("contextPath", request.getContextPath());        EntityManager entityManager = controller.getEntityManager();        EntityTransaction tx = entityManager.getTransaction();        try {            tx.begin();            stack.next(method, instance);            tx.commit();        } finally {            if (tx.isActive()) {                tx.rollback();            }            entityManager.close();        }    }    public boolean accepts(ResourceMethod method) {        return true;    }}